name: Deploy
on:
  release:
    types: [created]

defaults:
  run:
    shell: bash

permissions:
  contents: write

jobs:
  release:
    name: Deploy Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          # - aarch64-unknown-linux-gnu
          # - x86_64-unknown-linux-musl
          # - aarch64-unknown-linux-musl
          - aarch64-apple-darwin
          - x86_64-pc-windows-msvc
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            tag: linux-x64-gnu
          # - target: aarch64-unknown-linux-gnu
          #   os: ubuntu-latest
          #   tag: linux-aarch64-gnu
          # - target: x86_64-unknown-linux-musl
          #   os: ubuntu-24.04
          #   tag: linux-x86_64-musl
          # - target: aarch64-unknown-linux-musl
          #   os: ubuntu-24.04
          #   tag: linux-aarch64-musl
          - target: aarch64-apple-darwin
            os: macos-latest
            tag: macos-arm64
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            tag: windows-x64
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install Node.js packages
        run: npm install
      - name: Install tauri requirements on Linux
        if: matrix.target == 'x86_64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev
      - name: Install Rust
        run: bash .github/workflows/scripts/install-rust.sh stable ${{ matrix.target }}

      - name: Build asset
        if: matrix.target == 'aarch64-apple-darwin'
        env:
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_CERTIFICATE_IDENTIFIER: nabbisen, Scqr Inc.
        run: bash .github/workflows/scripts/make-release-asset.sh ${{ matrix.os }} ${{ matrix.target }} ${{ matrix.tag }}
      - name: Build asset
        if: matrix.target != 'aarch64-apple-darwin'
        run: bash .github/workflows/scripts/make-release-asset.sh ${{ matrix.os }} ${{ matrix.target }} ${{ matrix.tag }}

      - name: Update release with new asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload $APP_TAG $APP_ASSET
#  publish:
#    name: Publish to crates.io
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@master
#      - name: Install Rust (rustup)
#        run: rustup update stable --no-self-update && rustup default stable
#      - name: Publish
#        env:
#          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
#        run: cargo publish --no-verify
